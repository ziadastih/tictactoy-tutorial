*,
*::after,
*::before {
  box-sizing: border-box;
}

/* ====global valuable===== */
:root {
  /* cell size */
  --cell-size: 100px;

  /* mark size */
  --mark-size: calc(var(--cell-size) * 0.9);
}

body {
  margin: 0;
}

/* using display grid and  repeat 3 columns with setting the size auto so it takes the size we already set before  */
.board {
  width: 100vw;
  height: 100vh;
  /* creating the table and aligning it in the center */
  display: grid;
  justify-content: center;
  align-content: center;
  grid-template-columns: repeat(3, auto);
  /* align the x and o in the center */
  justify-items: center;
  align-items: center;
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid black;
  position: relative;
  cursor: pointer;
}

/* r========removing the borders that we doesnt want */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:first-child,
.cell:nth-child(4),
.cell:nth-child(7) {
  border-left: none;
}
.cell:nth-child(3),
.cell:nth-child(6),
.cell:nth-child(9) {
  border-right: none;
}
.cell:nth-child(7),
.cell:nth-child(8),
.cell:nth-child(9) {
  border-bottom: none;
}

/* setting hover effect for the board to take the same desig from here and only displat when it is not an x or an o */
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: calc(var(--mark-size));
  background-color: black;
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg);
}
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);
}

/* setting hover effect for the board to take the same desig from here and only displat when it is not an x or an o */
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  content: "";
  position: absolute;
  width: calc(var(--mark-size));
  height: calc(var(--mark-size));
  border-radius: 50%;
  border: 15px solid black;
  background-color: white;
}

/* in case the grid is fill we want the cursor to turn into not allowed */
.cell.x,
.cell.circle {
  cursor: not-allowed;
}

/* boar hover in case it is an x or and o */
.board.x .cell:not(.x):not(.circle):hover::before {
  background-color: lightgray;
}
.board.x .cell:not(.x):not(.circle):hover::after {
  background-color: lightgray;
}
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  border: 15px solid lightgray;
}

.winning-message {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.9);

  justify-content: center;
  align-items: center;
  flex-direction: column;
  color: white;
  font-size: 5rem;
}
.winning-message button {
  font-size: 3rem;
  background-color: white;
  border: 1px solid black;
  padding: 0.25em 0.5em;
  cursor: pointer;
}
.winning-message button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

.show {
  display: flex;
}
